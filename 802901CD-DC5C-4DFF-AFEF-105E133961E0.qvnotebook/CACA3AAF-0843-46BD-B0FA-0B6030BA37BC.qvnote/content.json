{
  "title": "Jan 18",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; white-space: normal;\"><div><span>    <span>    <span>    <span>    <span>    <span>    <span>    <span>    <span>    <span>    <span>    <span>    <span>    <span>    </span></span></span></span></span></span></span></span></span></span></span></span></span></span>Commandline programming environment</div><div>CLAC </div><div><br/></div><div><div><br/></div><table style=\"border-collapse: collapse; min-width: 100%;\"><colgroup><col style=\"width: 130px;\"/><col style=\"width: 235px;\"/></colgroup><tbody><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div><span style=\"font-weight: bold;\">Command</span></div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 235px; padding: 8px;\"><div><span style=\"font-weight: bold;\">Function</span></div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div>ls -l </div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 235px; padding: 8px;\"><div>list longform</div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div>ls -lF</div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 235px; padding: 8px;\"><div>appends a slash to show directories </div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div>ls -alF</div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 235px; padding: 8px;\"><div>Shows files whose names start with “.” Dot-files are usually configuration files. by convention.</div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div>alias</div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 235px; padding: 8px;\"><div>show all aliases</div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\">cat</td><td style=\"border: 1px solid rgb(219, 219, 219); width: 235px; padding: 8px;\"><div>print out</div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div>cat -n</div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 235px; padding: 8px;\"><div>Show line numbers</div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div>locate</div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 235px; padding: 8px;\"><div>find the directory of a file</div></td></tr></tbody></table><div><br/></div></div><div><br/></div><div>bashrc has all the bash configurations</div><div><br/></div><div>gcc [.c file] translates .c file into machine understandable language</div><div><ul><li>gcc -o hello hello.c</li><ul><li>creates a hello file</li></ul><li>gcc hello.c</li><ul><li>creates an “a.out” file</li></ul></ul></div><div><br/></div><div><br/></div><div>gcc -c main.c </div><div><ul><li>produces main.o machine code (compilation)</li></ul><div><br/></div></div><div>gcc main.o myadd.o  -o main</div><div><ul><li>links the the .o files into a main executable</li></ul><div><br/></div><div>if you have thousands of files and you change one, then you can compile to .o files</div><div><br/></div><div><br/></div><div>the executable for main would take up more space  than the respective .o’s, because printf also takes up space.</div></div><div><br/></div><div><div><br/></div><table style=\"border-collapse: collapse; min-width: 100%;\"><colgroup><col style=\"width: 130px;\"/><col style=\"width: 217px;\"/></colgroup><tbody><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div>gcc -c -Wall</div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 217px; padding: 8px;\"><div>all Warnings enabled. It will compile if legal, but may lead to future issues. -c only compiles the files, doesn’t link them yet</div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div>gcc -g</div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 217px; padding: 8px;\"><div>Shows line number if it crashes</div></td></tr><tr><td style=\"border: 1px solid rgb(219, 219, 219); width: 130px; padding: 8px;\"><div><br/></div></td><td style=\"border: 1px solid rgb(219, 219, 219); width: 217px; padding: 8px;\"><div><br/></div></td></tr></tbody></table><div><br/></div></div><div><br/></div><div>highly recommended to do</div><div><ul><li>function declaration</li><li>function prototype</li><li>function signature</li></ul><div>before calling a function that’s not in the same script.</div></div><div><br/></div><div>int myadd(int, int);</div><div>int main()</div><div>{int sum;</div><div>sum = myadd(3000, 157)</div><div>…}</div><div><br/></div><div><br/></div><div>“#include &lt;stdio.h&gt;” copy and pastes stdio.h</div><div><br/></div><div><br/></div><div>linker doesn’t pay attention to arguments of functions, only function names.</div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></div>"
    }
  ]
}